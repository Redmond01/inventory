FRONTEND 
    -ADMIN
        --BACKEND
        1A. LIST OF ALL PEN NAME
        1B. CREATE A CREATE PEN BUTTON TO ADD TO LIST OF PEN AVAILABE
        2. A DYNAMIC ROUTE FOR ALL THE PEN TO HAVE A UNIQUE ROUTE AND HAVE A USEEFFECT TO FECTH DATA 
        FOR THE SPECIFIC ROUTE AND HAVE A UPDATE RECORD BUTTON
        3.CREATE A WAY TO MANAGE CRUD LOGIC FOR EACH DATA INDIVIDUALLY
   - FINALS
    -- ALL ADMIN BACKEND ROUTES ARE COMPLETED

    //////////////////////////////////////////////////////////////////////////////////////////////
        --FRONTEND 
            1A. DASHBOARD PAGE
                -- A LAYOUT THAT WILL BE ON 10/90 RATIO BY DEFAULT AND 20/80 RATIO WHEN ACTION IS TRIGGERED
                THER WILL BE A STATE THAT WILL HOLD THE TWO LAYOUTS, IF A BUTTON IS CLICKED, THE LAYOUT WILL
                RESIZE TO 20/80 RATIO AND IF CLICKED OT OFF, THEN WE WILL HAVE A 10/90 RATIO
                /// DONE!!
            1B. -- A COMPANY NAME, SEARCH BAR AND A USE INFO
                    //DONE!! 
            1C. -- CREATE PEN BUTTON
                    //DONE!!
            2. LIST OF PENS AVIAILABLE
                    //DONe!!
            2B PROPERTIES OF EACH PEN LISTIN
           







BACKEND
    -ADMIN
        1.CREATE 2 DBS THAT WILL HANDLE THE LIST OF ALL PENS AND PENS + DATAS
        2A.CREATE A POST ROUTE TO CREATE A LIST OF PEN BASED ON THE DATA SENT BY THE ADMIN
        2B. CREATE A GET REQUEST THAT WILL SEND DATA FROM THE DB TO THE DYNAMIC ROUTE < JUST THE DATA>
        3.CREATE A WAY TO HANDLE THE CRUD LOGIC FROM THE ADMIN

-------BACKEND IMPLEMENTATION
    1A. WE WILL NEED TO CREATE 2 DATABASES, ONE WILL HOUSE THE NAME OF THE PEN, THE OTHER WILL HOUSE THE NAME OF THE PEN AND ARRAY OF DATAS
    --  TO MAKE THIS WORK, WE WILL NEED TO CREATE TWO FILE, AND THEY WILL HAVE TO BE DEPENDENT OF TWO TYPES OF SCHEMA
       * THE FIRST WILL ONLY HOUSE THE PEN NAMES
       * THE SECOND WILL BE OF TWO SCHEMA, WHERE WE HAVE A PARENT/CHILD TYPES, AND THE PARENT WILL CONTAIN THE PEN NAMES, WHILE THE CHILD 
        WILL BE A SCHEMA TO CONTAIN THE DATA THAT IS SENT ALONG SIDE OF UPDATE RECORD BUTTON
    
    1B. CREATE A POST ROUTE THAT WILL BE ABLE TO APPEND A NEW LIST OF PEN TO THE PEN RECORD IN THE DB
    --  WE WILL NEED TO MAKE THE LOGIC TO APPEND TO THE LIST OF ALL PEN THAT WE HAVE ALREADY TO KEEP THE LIST UPDATED

    2 WE WILL SEND ALL THE DATA WE HAVE FOR A TITLE IF MATCH FROM THE DATABASES TO THE ADMIN
    -- THIS WILL REQUIRE US TO MAKE A COMPARSIM BETWEENT THE TITLE SENT USING A POST ROUTE AND IF WE FIND A PEN THE MATCH, WE SEND THEM ALL DATA 
       THAT IS ATTACHED TO THE TITLE THAT IS REQUESSTING THE DATA

    3. CRUD LOGIC FOR UPDATE, DELETE WILL BE CREATED.

    FINALS
    -- CREATE.GET ROUTE SHOWS ALL LIST OF PENS
    -- CREATE.POST ROUTE ADD TO THE LIST OF PENS
    -- DYNAMIC.GET ROUTE SHOWS ALL DATA ASSOCIATED WITH THE A DYNAMIC ROUTE
    -- DYNAMIC.POST ROUTE ADD DATA TO THE DYNAMIC PEN.